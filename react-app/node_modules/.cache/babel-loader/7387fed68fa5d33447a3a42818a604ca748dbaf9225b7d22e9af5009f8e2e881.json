{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/myfavourites/myfavourites.js\";\nimport { Component } from \"react\";\nimport MFListing from \"./myfavouriteslisting\";\nimport './myfavourites.css';\n//import TestMFListing from \"./@@testmflisting\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MyFavourites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favouriteListings: [] // Initially an empty array, will be populated with data\n    };\n    this.displayFavouriteListings = async username => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/display-favourite-listings', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const listingData = await response.json();\n        console.log('Received user data:', listingData);\n        if (listingData.error) {\n          return;\n        }\n        // Update state with the received listing data\n        this.setState({\n          favouriteListings: listingData || []\n        });\n      } catch (error) {\n        console.error('Error creating listing:', error);\n        return false;\n      }\n    };\n    // Function to handle radio button change\n    this.handleRadioChange = event => {\n      const filterStatus = event.target.value;\n\n      // Update state with the selected filter status\n      this.setState({\n        filterStatus\n      }, () => {\n        // Filter listings based on the selected status\n        this.filterListings();\n      });\n    };\n    // Function to filter listings based on the selected status\n    this.filterListings = () => {\n      const {\n        listings,\n        filterStatus,\n        searchInput\n      } = this.state;\n      let filteredListings = listings.filter(listing => listing.address.toLowerCase().includes(searchInput.toLowerCase()) && (filterStatus === 'All' || listing.status === filterStatus));\n      this.setState({\n        filteredListings\n      });\n    };\n    this.handleViewListing = listingid => {\n      window.location.href = `/viewlistingpage/${listingid}`;\n    };\n    this.state = {\n      username: \"\",\n      favouriteListings: [],\n      // Initially an empty array, will be populated with data\n      filterStatus: \"All\" // Initial filter status, can be \"All\", \"Sold\", or \"Unsold\"\n    };\n  }\n  componentDidMount() {\n    //use this to get array of Favourited Listing's IDs\n    const username = window.location.href.split('/')[4];\n    this.displayFavouriteListings(username);\n  }\n  render() {\n    const {\n      favouriteListings,\n      filterStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myfavouritesarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bs-filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"All\",\n              checked: filterStatus === \"All\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), \"All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Unsold\",\n              checked: filterStatus === \"Unsold\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), \"Unsold\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Sold\",\n              checked: filterStatus === \"Sold\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), \"Sold\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listings-container\",\n          children: favouriteListings && favouriteListings.map(listing => /*#__PURE__*/_jsxDEV(MFListing, {\n            listing: listing,\n            onView: () => this.handleViewListing(listing.id)\n          }, listing.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default MyFavourites;","map":{"version":3,"names":["Component","MFListing","jsxDEV","_jsxDEV","Fragment","_Fragment","MyFavourites","constructor","props","state","favouriteListings","displayFavouriteListings","username","response","fetch","method","headers","body","JSON","stringify","ok","Error","listingData","json","console","log","error","setState","handleRadioChange","event","filterStatus","target","value","filterListings","listings","searchInput","filteredListings","filter","listing","address","toLowerCase","includes","status","handleViewListing","listingid","window","location","href","componentDidMount","split","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","onView","id"],"sources":["/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/myfavourites/myfavourites.js"],"sourcesContent":["import { Component } from \"react\";\nimport MFListing from \"./myfavouriteslisting\";\nimport './myfavourites.css';\n//import TestMFListing from \"./@@testmflisting\";\n\nclass MyFavourites extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:\"\",\n            favouriteListings: [], // Initially an empty array, will be populated with data\n            filterStatus: \"All\" // Initial filter status, can be \"All\", \"Sold\", or \"Unsold\"\n        };\n    };\n    \n    \n    state = {\n        favouriteListings: [], // Initially an empty array, will be populated with data\n    };\n\n    componentDidMount() { //use this to get array of Favourited Listing's IDs\n        const username = window.location.href.split('/')[4];\n         \n        this.displayFavouriteListings(username);\n    }\n\n    displayFavouriteListings = async (username) => {\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/display-favourite-listings', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({username})\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const listingData = await response.json();\n            console.log('Received user data:', listingData);\n\n            if (listingData.error){\n                return;\n            }\n            // Update state with the received listing data\n            this.setState({ \n                favouriteListings: listingData || []\n            });\n        } catch (error) {\n            console.error('Error creating listing:', error);\n            return false;\n        }\n    };\n\n    // Function to handle radio button change\n    handleRadioChange = (event) => {\n        const filterStatus = event.target.value;\n    \n        // Update state with the selected filter status\n        this.setState({ filterStatus }, () => {\n            // Filter listings based on the selected status\n            this.filterListings();\n        });\n    };\n    \n    // Function to filter listings based on the selected status\n    filterListings = () => {\n        const { listings, filterStatus, searchInput } = this.state;\n    \n        let filteredListings = listings.filter(listing =>\n            listing.address.toLowerCase().includes(searchInput.toLowerCase()) &&\n            (filterStatus === 'All' || listing.status === filterStatus)\n        );\n    \n        this.setState({ filteredListings });\n    };\n    handleViewListing = (listingid) => {\n        window.location.href = `/viewlistingpage/${listingid}`\n    };\n\n    render(){\n        const { favouriteListings , filterStatus } = this.state;\n        return(\n            <>\n            <div className=\"myfavouritesarea\">\n                <h2>My Favourites</h2>\n                <div className=\"bs-filter-container\">\n                    <label className=\"bs-filter-item\">\n                        <input \n                            type=\"radio\" \n                            value=\"All\" \n                            checked={filterStatus === \"All\"} \n                            onChange={this.handleRadioChange} \n                        />\n                        All\n                    </label>\n                    <label className=\"bs-filter-item\">\n                        <input \n                            type=\"radio\" \n                            value=\"Unsold\" \n                            checked={filterStatus === \"Unsold\"} \n                            onChange={this.handleRadioChange} \n                        />\n                        Unsold\n                    </label>\n                    <label className=\"bs-filter-item\">\n                        <input \n                            type=\"radio\" \n                            value=\"Sold\" \n                            checked={filterStatus === \"Sold\"} \n                            onChange={this.handleRadioChange} \n                        />\n                        Sold\n                    </label>\n                </div>\n                <div className=\"listings-container\">\n                {favouriteListings && favouriteListings.map(listing => (\n                    <MFListing key={listing.id} \n                      listing={listing} \n                      onView={() => this.handleViewListing(listing.id)}\n                    />\n                ))}\n                </div>\n            </div>\n            </>\n        )\n    }  \n}\n\nexport default MyFavourites;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAO,oBAAoB;AAC3B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,YAAY,SAASN,SAAS;EAChCO,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KASjBC,KAAK,GAAG;MACJC,iBAAiB,EAAE,EAAE,CAAE;IAC3B,CAAC;IAAA,KAQDC,wBAAwB,GAAG,MAAOC,QAAQ,IAAK;MAC3C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;UACjFC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAACP;UAAQ,CAAC;QACnC,CAAC,CAAC;QACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,WAAW,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACzCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,WAAW,CAAC;QAE/C,IAAIA,WAAW,CAACI,KAAK,EAAC;UAClB;QACJ;QACA;QACA,IAAI,CAACC,QAAQ,CAAC;UACVjB,iBAAiB,EAAEY,WAAW,IAAI;QACtC,CAAC,CAAC;MACN,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,OAAO,KAAK;MAChB;IACJ,CAAC;IAED;IAAA,KACAE,iBAAiB,GAAIC,KAAK,IAAK;MAC3B,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;;MAEvC;MACA,IAAI,CAACL,QAAQ,CAAC;QAAEG;MAAa,CAAC,EAAE,MAAM;QAClC;QACA,IAAI,CAACG,cAAc,CAAC,CAAC;MACzB,CAAC,CAAC;IACN,CAAC;IAED;IAAA,KACAA,cAAc,GAAG,MAAM;MACnB,MAAM;QAAEC,QAAQ;QAAEJ,YAAY;QAAEK;MAAY,CAAC,GAAG,IAAI,CAAC1B,KAAK;MAE1D,IAAI2B,gBAAgB,GAAGF,QAAQ,CAACG,MAAM,CAACC,OAAO,IAC1CA,OAAO,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,CAAC,KAChEV,YAAY,KAAK,KAAK,IAAIQ,OAAO,CAACI,MAAM,KAAKZ,YAAY,CAC9D,CAAC;MAED,IAAI,CAACH,QAAQ,CAAC;QAAES;MAAiB,CAAC,CAAC;IACvC,CAAC;IAAA,KACDO,iBAAiB,GAAIC,SAAS,IAAK;MAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,oBAAmBH,SAAU,EAAC;IAC1D,CAAC;IAtEG,IAAI,CAACnC,KAAK,GAAG;MACTG,QAAQ,EAAC,EAAE;MACXF,iBAAiB,EAAE,EAAE;MAAE;MACvBoB,YAAY,EAAE,KAAK,CAAC;IACxB,CAAC;EACL;EAOAkB,iBAAiBA,CAAA,EAAG;IAAE;IAClB,MAAMpC,QAAQ,GAAGiC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEnD,IAAI,CAACtC,wBAAwB,CAACC,QAAQ,CAAC;EAC3C;EAwDAsC,MAAMA,CAAA,EAAE;IACJ,MAAM;MAAExC,iBAAiB;MAAGoB;IAAa,CAAC,GAAG,IAAI,CAACrB,KAAK;IACvD,oBACIN,OAAA,CAAAE,SAAA;MAAA8C,QAAA,eACAhD,OAAA;QAAKiD,SAAS,EAAC,kBAAkB;QAAAD,QAAA,gBAC7BhD,OAAA;UAAAgD,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBrD,OAAA;UAAKiD,SAAS,EAAC,qBAAqB;UAAAD,QAAA,gBAChChD,OAAA;YAAOiD,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BhD,OAAA;cACIsD,IAAI,EAAC,OAAO;cACZzB,KAAK,EAAC,KAAK;cACX0B,OAAO,EAAE5B,YAAY,KAAK,KAAM;cAChC6B,QAAQ,EAAE,IAAI,CAAC/B;YAAkB;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,OAEN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRrD,OAAA;YAAOiD,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BhD,OAAA;cACIsD,IAAI,EAAC,OAAO;cACZzB,KAAK,EAAC,QAAQ;cACd0B,OAAO,EAAE5B,YAAY,KAAK,QAAS;cACnC6B,QAAQ,EAAE,IAAI,CAAC/B;YAAkB;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,UAEN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRrD,OAAA;YAAOiD,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BhD,OAAA;cACIsD,IAAI,EAAC,OAAO;cACZzB,KAAK,EAAC,MAAM;cACZ0B,OAAO,EAAE5B,YAAY,KAAK,MAAO;cACjC6B,QAAQ,EAAE,IAAI,CAAC/B;YAAkB;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,QAEN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACNrD,OAAA;UAAKiD,SAAS,EAAC,oBAAoB;UAAAD,QAAA,EAClCzC,iBAAiB,IAAIA,iBAAiB,CAACkD,GAAG,CAACtB,OAAO,iBAC/CnC,OAAA,CAACF,SAAS;YACRqC,OAAO,EAAEA,OAAQ;YACjBuB,MAAM,EAAEA,CAAA,KAAM,IAAI,CAAClB,iBAAiB,CAACL,OAAO,CAACwB,EAAE;UAAE,GAFnCxB,OAAO,CAACwB,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGzB,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,gBACJ,CAAC;EAEX;AACJ;AAEA,eAAelD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}