{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhiwe\\\\OneDrive\\\\Documents\\\\Uni Lectures\\\\Term 7 CSIT 314\\\\Project\\\\Csit314-Group-Project\\\\react-app\\\\src\\\\components\\\\REAviewRandR\\\\viewRandR.js\";\nimport { Component } from \"react\";\nimport RatingsAndReviews from \"./ratingandreviewdisplay\";\nimport './REAviewRandR.css';\nimport Testrr from \"./@@testrr\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ViewRandR extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ratings: [],\n      // Initially an empty array, will be populated with data\n      final_rating: 0\n    };\n    this.viewReviews = async username => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/view-reviews', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const reviewData = await response.json();\n        console.log('Received user data:', reviewData);\n        if (reviewData.error) {\n          console.log(reviewData.error);\n          return;\n        }\n        this.setState({\n          ratings: reviewData,\n          reviews: reviewData\n        });\n      } catch (error) {\n        console.error('Error viewing reviews:', error);\n      }\n    };\n    this.viewRating = async username => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/view-rating', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const ratingData = await response.json();\n        console.log('Received data:', ratingData);\n        if (ratingData.error) {\n          console.log(ratingData.error);\n          return;\n        }\n        this.setState({\n          final_rating: ratingData\n        });\n      } catch (error) {\n        console.error('Error viewing rating:', error);\n      }\n    };\n  }\n  componentDidMount() {\n    const username = window.location.href.split('/')[4];\n    this.setState({}, () => {\n      this.viewReviews(username);\n      this.viewRating(username);\n    });\n  }\n  render() {\n    const {\n      ratings,\n      final_rating\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RandRDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Ratings and Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", final_rating, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), ratings && ratings.map(rating => /*#__PURE__*/_jsxDEV(RatingsAndReviews, {\n          rating: rating\n        }, rating.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default ViewRandR;","map":{"version":3,"names":["Component","RatingsAndReviews","Testrr","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewRandR","constructor","args","state","ratings","final_rating","viewReviews","username","response","fetch","method","headers","body","JSON","stringify","ok","Error","reviewData","json","console","log","error","setState","reviews","viewRating","ratingData","componentDidMount","window","location","href","split","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","rating","id"],"sources":["C:/Users/zhiwe/OneDrive/Documents/Uni Lectures/Term 7 CSIT 314/Project/Csit314-Group-Project/react-app/src/components/REAviewRandR/viewRandR.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport RatingsAndReviews from \"./ratingandreviewdisplay\";\r\nimport './REAviewRandR.css';\r\nimport Testrr from \"./@@testrr\";\r\n\r\nclass ViewRandR extends Component{\r\n    state = {\r\n        ratings: [], // Initially an empty array, will be populated with data\r\n        final_rating: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        const username = window.location.href.split('/')[4];\r\n\r\n        this.setState({}, () => {\r\n            this.viewReviews(username);\r\n            this.viewRating(username)\r\n        });\r\n    }\r\n\r\n    viewReviews = async (username) => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/view-reviews', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({username })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const reviewData = await response.json();\r\n            console.log('Received user data:', reviewData);\r\n\r\n            if (reviewData.error){\r\n                console.log(reviewData.error)\r\n                return;\r\n            }\r\n\r\n            this.setState({ ratings: reviewData, reviews: reviewData })\r\n            \r\n\r\n        } catch (error) {\r\n            console.error('Error viewing reviews:', error);\r\n            \r\n        }\r\n    };\r\n\r\n    viewRating = async (username) => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/view-rating', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({username })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const ratingData = await response.json();\r\n            console.log('Received data:', ratingData);\r\n\r\n            if (ratingData.error){\r\n                console.log(ratingData.error)\r\n                return;\r\n            }\r\n\r\n            this.setState({ final_rating: ratingData })\r\n            \r\n\r\n        } catch (error) {\r\n            console.error('Error viewing rating:', error);\r\n            \r\n        }\r\n    };\r\n\r\n    render(){\r\n        const {ratings, final_rating} = this.state;\r\n        return(\r\n            <>\r\n            <div className = \"RandRDisplay\">\r\n            <h2>My Ratings and Reviews</h2>\r\n            <p>Rating: {final_rating}/5</p>\r\n            {/*<Testrr/><Testrr/><Testrr/>*/}\r\n            {ratings && ratings.map(rating => (\r\n              <RatingsAndReviews key={rating.id} rating={rating}/>\r\n            ))}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewRandR;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}