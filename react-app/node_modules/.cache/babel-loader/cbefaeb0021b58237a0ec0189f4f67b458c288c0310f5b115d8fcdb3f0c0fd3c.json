{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhiwe\\\\OneDrive\\\\Documents\\\\Uni Lectures\\\\Term 7 CSIT 314\\\\Project\\\\Csit314-Group-Project\\\\react-app\\\\src\\\\components\\\\myfavourites\\\\myfavourites.js\";\nimport { Component } from \"react\";\nimport MFListing from \"./myfavouriteslisting\";\nimport './myfavourites.css';\n//import TestMFListing from \"./@@testmflisting\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MyFavourites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favouriteListings: [] // Initially an empty array, will be populated with data\n    };\n    this.displayFavouriteListings = async username => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/display-favourite-listings', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const listingData = await response.json();\n        console.log('Received user data:', listingData);\n        if (listingData.error) {\n          return;\n        }\n        // Update state with the received listing data\n        this.setState({\n          favouriteListings: listingData || [],\n          filteredListings: listingData || []\n        });\n      } catch (error) {\n        console.error('Error creating listing:', error);\n        return false;\n      }\n    };\n    this.handleRadioChange = event => {\n      const filterStatus = event.target.value;\n      this.setState({\n        filterStatus\n      }, () => {\n        this.filterListings(); // Filter listings based on the selected status\n      });\n    };\n    this.filterListings = () => {\n      const {\n        favouriteListings,\n        filterStatus\n      } = this.state;\n      let filteredListings = favouriteListings;\n\n      // Filter listings based on status\n      if (filterStatus !== \"All\") {\n        filteredListings = filteredListings.filter(listing => listing.status === filterStatus);\n      }\n\n      // Update state with filtered listings\n      this.setState({\n        filteredListings\n      });\n    };\n    this.handleViewListing = listingid => {\n      window.location.href = `/viewlistingpage/${listingid}`;\n    };\n    this.state = {\n      username: \"\",\n      favouriteListings: [],\n      // Initially an empty array, will be populated with data\n      filteredListings: [],\n      filterStatus: \"All\" // Initial filter status, can be \"All\", \"Sold\", or \"Unsold\"\n    };\n  }\n  componentDidMount() {\n    //use this to get array of Favourited Listing's IDs\n    const username = window.location.href.split('/')[4];\n    this.displayFavouriteListings(username);\n  }\n  render() {\n    const {\n      filteredListings,\n      filterStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myfavouritesarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bs-filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"All\",\n              checked: filterStatus === \"All\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), \"All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Available\",\n              checked: filterStatus === \"Available\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), \"Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Sold\",\n              checked: filterStatus === \"Sold\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), \"Sold\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listings-container\",\n          children: filteredListings && filteredListings.map(listing => /*#__PURE__*/_jsxDEV(MFListing, {\n            listing: listing,\n            onView: () => this.handleViewListing(listing.id)\n          }, listing.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default MyFavourites;","map":{"version":3,"names":["Component","MFListing","jsxDEV","_jsxDEV","Fragment","_Fragment","MyFavourites","constructor","props","state","favouriteListings","displayFavouriteListings","username","response","fetch","method","headers","body","JSON","stringify","ok","Error","listingData","json","console","log","error","setState","filteredListings","handleRadioChange","event","filterStatus","target","value","filterListings","filter","listing","status","handleViewListing","listingid","window","location","href","componentDidMount","split","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","onView","id"],"sources":["C:/Users/zhiwe/OneDrive/Documents/Uni Lectures/Term 7 CSIT 314/Project/Csit314-Group-Project/react-app/src/components/myfavourites/myfavourites.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport MFListing from \"./myfavouriteslisting\";\r\nimport './myfavourites.css';\r\n//import TestMFListing from \"./@@testmflisting\";\r\n\r\nclass MyFavourites extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            favouriteListings: [], // Initially an empty array, will be populated with data\r\n            filteredListings: [],\r\n            filterStatus: \"All\" // Initial filter status, can be \"All\", \"Sold\", or \"Unsold\"\r\n        };\r\n    };\r\n    \r\n    \r\n    state = {\r\n        favouriteListings: [], // Initially an empty array, will be populated with data\r\n    };\r\n\r\n    componentDidMount() { //use this to get array of Favourited Listing's IDs\r\n        const username = window.location.href.split('/')[4];\r\n         \r\n        this.displayFavouriteListings(username);\r\n    }\r\n\r\n    displayFavouriteListings = async (username) => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/display-favourite-listings', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({username})\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const listingData = await response.json();\r\n            console.log('Received user data:', listingData);\r\n\r\n            if (listingData.error){\r\n                return;\r\n            }\r\n            // Update state with the received listing data\r\n            this.setState({ \r\n                favouriteListings: listingData || [],\r\n                filteredListings: listingData || []\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating listing:', error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    handleRadioChange = (event) => {\r\n        const filterStatus = event.target.value;\r\n        this.setState({ filterStatus }, () => {\r\n            this.filterListings(); // Filter listings based on the selected status\r\n        });\r\n    };\r\n    \r\n    filterListings = () => {\r\n        const { favouriteListings, filterStatus } = this.state;\r\n        let filteredListings = favouriteListings;\r\n    \r\n        // Filter listings based on status\r\n        if (filterStatus !== \"All\") {\r\n            filteredListings = filteredListings.filter(listing => listing.status === filterStatus);\r\n        }\r\n    \r\n        // Update state with filtered listings\r\n        this.setState({ filteredListings });\r\n    };\r\n\r\n    handleViewListing = (listingid) => {\r\n        window.location.href = `/viewlistingpage/${listingid}`\r\n    };\r\n\r\n    render(){\r\n        const { filteredListings , filterStatus } = this.state;\r\n        return(\r\n            <>\r\n            <div className=\"myfavouritesarea\">\r\n                <h2>My Favourites</h2>\r\n                <div className=\"bs-filter-container\">\r\n                    <label className=\"bs-filter-item\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            value=\"All\" \r\n                            checked={filterStatus === \"All\"} \r\n                            onChange={this.handleRadioChange} \r\n                        />\r\n                        All\r\n                    </label>\r\n                    <label className=\"bs-filter-item\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            value=\"Available\" \r\n                            checked={filterStatus === \"Available\"} \r\n                            onChange={this.handleRadioChange} \r\n                        />\r\n                        Available\r\n                    </label>\r\n                    <label className=\"bs-filter-item\">\r\n                        <input \r\n                            type=\"radio\" \r\n                            value=\"Sold\" \r\n                            checked={filterStatus === \"Sold\"} \r\n                            onChange={this.handleRadioChange} \r\n                        />\r\n                        Sold\r\n                    </label>\r\n                </div>\r\n                <div className=\"listings-container\">\r\n                {filteredListings && filteredListings.map(listing => (\r\n                    <MFListing key={listing.id} \r\n                      listing={listing} \r\n                      onView={() => this.handleViewListing(listing.id)}\r\n                    />\r\n                ))}\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }  \r\n}\r\n\r\nexport default MyFavourites;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}