{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/editprofile/editprofile.js\";\nimport { Component, useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport './editprofile.css';\n\n//should be placed in a class\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/data');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const responseData = await response.json();\n        setData(responseData.message);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    this.updatePassword = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/update-user-details', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const responseData = await response.json();\n        return responseData.success;\n      } catch (error) {\n        console.error('Error logging in:', error);\n        return null;\n      }\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await updatePassword();\n      console.log(\"1) username: \" + username + \"    2) password: \" + password);\n    };\n    this.handleInputChange = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n    this.state = {\n      data: '',\n      username: '',\n      password: '',\n      cpassword: '',\n      userType: ''\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"updateAccTextArea\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginTextBoxes\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"caText\",\n              children: \"New Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: this.state.password,\n              onChange: this.handleInputChange,\n              name: \"password\",\n              placeholder: \"Password\",\n              className: \"caTextBox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"caText\",\n              children: \"Confirm new Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: this.state.cpassword,\n              onChange: this.handleInputChange,\n              name: \"cpassword\",\n              placeholder: \"Confirm Password\",\n              className: \"caTextBox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preLoginAdditionalFunctions\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/sahomepage\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Update\",\n                className: \"loginSubmit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default EditProfile;","map":{"version":3,"names":["Component","useState","useEffect","React","Link","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","EditProfile","constructor","props","fetchData","response","fetch","ok","Error","responseData","json","setData","message","error","console","updatePassword","method","headers","body","JSON","stringify","username","password","success","handleSubmit","event","preventDefault","log","handleInputChange","value","target","setPassword","state","data","cpassword","userType","componentDidMount","render","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","name","placeholder","to"],"sources":["/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/editprofile/editprofile.js"],"sourcesContent":["import { Component, useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport './editprofile.css';\n\n//should be placed in a class\nclass EditProfile extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: '',\n            username: '',\n            password: '',\n            cpassword: '',\n            userType: '',\n        };\n    }\n\n    fetchData = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/data');\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const responseData = await response.json();\n            setData(responseData.message);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    updatePassword = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/update-user-details', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({username, password})\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const responseData = await response.json();\n            return responseData.success;\n        } catch (error) {\n            console.error('Error logging in:', error);\n            return null;\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        await updatePassword();\n        console.log(\"1) username: \" + username + \"    2) password: \" + password);\n    };\n\n    handleInputChange = (event) => {\n        const { value } = event.target;\n        setPassword(value);\n    };\n    \n    render(){\n        return(\n            <>\n                <div>\n                    <form className=\"updateAccTextArea\" onSubmit={handleSubmit}>\n                        <div className=\"loginTextBoxes\">\n                        <p className=\"caText\">New Password:</p>\n                        <input type=\"password\" value={this.state.password} onChange={this.handleInputChange} name=\"password\" placeholder=\"Password\" className=\"caTextBox\"/>\n                        <p className=\"caText\">Confirm new Password:</p>\n                        <input type=\"password\" value={this.state.cpassword} onChange={this.handleInputChange} name=\"cpassword\" placeholder=\"Confirm Password\" className=\"caTextBox\"/>\n                        </div>\n                        <div className=\"preLoginAdditionalFunctions\">\n                            <Link to='/sahomepage'><input type=\"submit\" value=\"Update\" className=\"loginSubmit\"/></Link>\n                        </div>\n                    </form>\n                </div>\n            </>\n        )\n    \n}\n}\n\nexport default EditProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}