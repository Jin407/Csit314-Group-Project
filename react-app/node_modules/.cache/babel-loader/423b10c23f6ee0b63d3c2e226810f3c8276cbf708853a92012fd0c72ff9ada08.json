{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/updateprofile/updateprofile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './createdynamicaccount.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  const {\n    userType\n  } = useParams();\n  const [data, setData] = useState('');\n  const [profileName, setProfilename] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setCpassword] = useState('');\n  const [createAccountMessage, setCreateAccountMessage] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/data');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.json();\n      setData(responseData.message);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'profileName') setProfilename(value);else if (name === 'password') setPassword(value);else if (name === 'cpassword') setCpassword(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caArea\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"caModule\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"preLoginHeader\",\n        children: \"Update profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"caTextArea\",\n        onSubmit: handleSubmit,\n        children: [\"Selected profile: \", userType, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caTextBoxes\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"caText\",\n            children: \"New Profile name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: profileName,\n            onChange: handleInputChange,\n            name: \"profileName\",\n            placeholder: \"profile name\",\n            className: \"caTextBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preLoginAdditionalFunctions\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update profile\",\n            className: \"caSubmit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"createAccountmessage\",\n          children: createAccountMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateProfile, \"MZqkglB4dvWJevXoCVWqAQ7C1rw=\", false, function () {\n  return [useParams];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UpdateProfile","_s","userType","data","setData","profileName","setProfilename","password","setPassword","cpassword","setCpassword","createAccountMessage","setCreateAccountMessage","fetchData","response","fetch","ok","Error","responseData","json","message","error","console","handleSubmit","event","preventDefault","handleInputChange","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/updateprofile/updateprofile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './createdynamicaccount.css';\n\nconst UpdateProfile = () => {\n    const { userType } = useParams();\n\n    const [data, setData] = useState('');\n    const [profileName, setProfilename] = useState('');\n    const [password, setPassword] = useState('');\n    const [cpassword, setCpassword] = useState('');\n    const [createAccountMessage, setCreateAccountMessage] = useState('');\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/data');\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const responseData = await response.json();\n            setData(responseData.message);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        \n    };\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'profileName') setProfilename(value);\n        else if (name === 'password') setPassword(value);\n        else if (name === 'cpassword') setCpassword(value);\n    };\n\n    return (\n        <div className=\"caArea\">\n            <div className=\"caModule\">\n                <p className=\"preLoginHeader\">Update profile</p>\n                <form className=\"caTextArea\" onSubmit={handleSubmit}>\n                    Selected profile: {userType}\n                    <div className=\"caTextBoxes\">\n                        <p className=\"caText\">New Profile name:</p>\n                        <input type=\"text\" value={profileName} onChange={handleInputChange} name=\"profileName\" placeholder=\"profile name\" className=\"caTextBox\"/>\n                    </div>\n                    <div className=\"preLoginAdditionalFunctions\">\n                        <input type=\"submit\" value=\"Update profile\" className=\"caSubmit\"/>\n                    </div>\n                    <p className=\"createAccountmessage\">{createAccountMessage}</p>\n                    \n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default UpdateProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}