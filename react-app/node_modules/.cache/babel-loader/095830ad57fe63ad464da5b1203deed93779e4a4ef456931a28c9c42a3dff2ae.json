{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/REAviewRandR/viewRandR.js\";\nimport { Component } from \"react\";\nimport RatingsAndReviews from \"./ratingandreviewdisplay\";\nimport './REAviewRandR.css';\nimport Testrr from \"./@@testrr\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass ViewRandR extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ratings: [] // Initially an empty array, will be populated with data\n    };\n    this.viewReviews = async username => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/update-property-listing', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const reviewData = await response.json();\n        console.log('Received user data:', reviewData);\n        this.setState({\n          ratings: reviewData,\n          reviews: reviewData\n        });\n      } catch (error) {\n        console.error('Error updating listing:', error);\n      }\n    };\n  }\n  componentDidMount() {\n    const username = window.location.href.split('/')[4];\n    this.setState({\n      username: window.location.href.split('/')[4]\n    });\n    fetch('http://127.0.0.1:5000/api/login') //http://127.0.0.1:5000/api/ratingsAndReviews?username=${username}\n    .then(response => response.json()).then(data => this.setState({\n      ratings: data,\n      reviews: data\n    })).catch(error => console.error('Error fetching listings:', error));\n  }\n  render() {\n    const {\n      ratings\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RandRDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Ratings and Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), ratings && ratings.map(rating => /*#__PURE__*/_jsxDEV(RatingsAndReviews, {\n          rating: rating\n        }, rating.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default ViewRandR;","map":{"version":3,"names":["Component","RatingsAndReviews","Testrr","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewRandR","constructor","args","state","ratings","viewReviews","username","response","fetch","method","headers","body","JSON","stringify","ok","Error","reviewData","json","console","log","setState","reviews","error","componentDidMount","window","location","href","split","then","data","catch","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","rating","id"],"sources":["/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/REAviewRandR/viewRandR.js"],"sourcesContent":["import { Component } from \"react\";\nimport RatingsAndReviews from \"./ratingandreviewdisplay\";\nimport './REAviewRandR.css';\nimport Testrr from \"./@@testrr\";\n\nclass ViewRandR extends Component{\n    state = {\n        ratings: [], // Initially an empty array, will be populated with data\n    };\n\n    componentDidMount() {\n        const username = window.location.href.split('/')[4];\n\n        this.setState({\n            username: window.location.href.split('/')[4]\n        });\n        fetch('http://127.0.0.1:5000/api/login')//http://127.0.0.1:5000/api/ratingsAndReviews?username=${username}\n          .then(response => response.json())\n          .then(data => this.setState({ ratings: data, reviews: data }))\n          .catch(error => console.error('Error fetching listings:', error));\n    }\n\n    viewReviews = async (username) => {\n        try {\n            const response = await fetch('http://127.0.0.1:5000/api/update-property-listing', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({username })\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const reviewData = await response.json();\n            console.log('Received user data:', reviewData);\n\n            this.setState({ ratings: reviewData, reviews: reviewData })\n            \n\n        } catch (error) {\n            console.error('Error updating listing:', error);\n            \n        }\n    };\n\n    render(){\n        const {ratings} = this.state;\n        return(\n            <>\n            <div className = \"RandRDisplay\">\n            <h2>My Ratings and Reviews</h2>\n            {/*<Testrr/><Testrr/><Testrr/>*/}\n            {ratings && ratings.map(rating => (\n              <RatingsAndReviews key={rating.id} rating={rating}/>\n            ))}\n            </div>\n            </>\n        )\n    }\n}\n\nexport default ViewRandR;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,iBAAiB,MAAM,0BAA0B;AACxD,OAAO,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,SAAS,SAASP,SAAS;EAAAQ,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC7BC,KAAK,GAAG;MACJC,OAAO,EAAE,EAAE,CAAE;IACjB,CAAC;IAAA,KAcDC,WAAW,GAAG,MAAOC,QAAQ,IAAK;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;UAC9EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAACP;UAAS,CAAC;QACpC,CAAC,CAAC;QACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,UAAU,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACxCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,UAAU,CAAC;QAE9C,IAAI,CAACI,QAAQ,CAAC;UAAEhB,OAAO,EAAEY,UAAU;UAAEK,OAAO,EAAEL;QAAW,CAAC,CAAC;MAG/D,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAEnD;IACJ,CAAC;EAAA;EAlCDC,iBAAiBA,CAAA,EAAG;IAChB,MAAMjB,QAAQ,GAAGkB,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEnD,IAAI,CAACP,QAAQ,CAAC;MACVd,QAAQ,EAAEkB,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;IACFnB,KAAK,CAAC,iCAAiC,CAAC;IAAA,CACrCoB,IAAI,CAACrB,QAAQ,IAAIA,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CACjCW,IAAI,CAACC,IAAI,IAAI,IAAI,CAACT,QAAQ,CAAC;MAAEhB,OAAO,EAAEyB,IAAI;MAAER,OAAO,EAAEQ;IAAK,CAAC,CAAC,CAAC,CAC7DC,KAAK,CAACR,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EACvE;EA0BAS,MAAMA,CAAA,EAAE;IACJ,MAAM;MAAC3B;IAAO,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B,oBACIN,OAAA,CAAAE,SAAA;MAAAiC,QAAA,eACAnC,OAAA;QAAKoC,SAAS,EAAG,cAAc;QAAAD,QAAA,gBAC/BnC,OAAA;UAAAmC,QAAA,EAAI;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAE9BjC,OAAO,IAAIA,OAAO,CAACkC,GAAG,CAACC,MAAM,iBAC5B1C,OAAA,CAACH,iBAAiB;UAAiB6C,MAAM,EAAEA;QAAO,GAA1BA,MAAM,CAACC,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC,gBACJ,CAAC;EAEX;AACJ;AAEA,eAAerC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}