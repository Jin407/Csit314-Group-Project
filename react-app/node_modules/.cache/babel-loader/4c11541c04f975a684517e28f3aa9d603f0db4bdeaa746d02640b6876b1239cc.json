{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhiwe\\\\OneDrive\\\\Documents\\\\Uni Lectures\\\\Term 7 CSIT 314\\\\Project\\\\Csit314-Group-Project\\\\react-app\\\\src\\\\components\\\\createptpopup\\\\createptpopup.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProfileTable from '../profiletable/profiletable';\nimport './createptpopup.css';\n\n// Popup Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupForm = ({\n  onSubmit,\n  onClose\n}) => {\n  _s();\n  const [profileName, setProfileName] = useState('');\n  const createProfile = async profileName => {\n    console.log(profileName);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/create-profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          profileName\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const responseData = await response.json();\n      return responseData.success;\n    } catch (error) {\n      console.error('Error logging in:', error);\n      return false;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createProfile(profileName);\n    onSubmit(profileName);\n    setProfileName(''); // Clear input after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: profileName,\n          onChange: e => setProfileName(e.target.value),\n          placeholder: \"Enter profile name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// component\n_s(PopupForm, \"5tm47l8KABttzwI0alIgyDRqx+Q=\");\n_c = PopupForm;\nconst PTPopup = () => {\n  _s2();\n  const [showPopup, setShowPopup] = useState(false);\n  const [userType, setUserType] = useState('');\n  const [profileTables, setProfileTables] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    fetchUserTypes(); // Fetch user types when component mounts\n  }, []); // Run only once on component mount   \n\n  const openPopup = () => {\n    setShowPopup(true);\n  };\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  const handleSubmit = name => {\n    setUserType(name);\n    setProfileTables([...profileTables, /*#__PURE__*/_jsxDEV(ProfileTable, {\n      userType: name\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }, this)]);\n    closePopup();\n  };\n  const handleSearchChange = e => {\n    setSearchInput(e.target.value); // Update searchInput state with the typed value\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchInput,\n      onChange: handleSearchChange,\n      placeholder: \"Search profile tables...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), profileTables.filter(table => table.props.userType.toLowerCase().includes(searchInput.toLowerCase())).map((table, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: table\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)), showPopup && /*#__PURE__*/_jsxDEV(PopupForm, {\n      onSubmit: handleSubmit,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"createProfileTableButton\",\n      onClick: openPopup,\n      children: \"Create Profile Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(PTPopup, \"B+iCAwgC/ggrnu00d6YeUrzsSAw=\");\n_c2 = PTPopup;\nexport default PTPopup;\nvar _c, _c2;\n$RefreshReg$(_c, \"PopupForm\");\n$RefreshReg$(_c2, \"PTPopup\");","map":{"version":3,"names":["React","useState","useEffect","ProfileTable","jsxDEV","_jsxDEV","PopupForm","onSubmit","onClose","_s","profileName","setProfileName","createProfile","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","responseData","json","success","error","handleSubmit","e","preventDefault","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","PTPopup","_s2","showPopup","setShowPopup","userType","setUserType","profileTables","setProfileTables","searchInput","setSearchInput","fetchUserTypes","openPopup","closePopup","name","handleSearchChange","filter","table","props","toLowerCase","includes","map","index","_c2","$RefreshReg$"],"sources":["C:/Users/zhiwe/OneDrive/Documents/Uni Lectures/Term 7 CSIT 314/Project/Csit314-Group-Project/react-app/src/components/createptpopup/createptpopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProfileTable from '../profiletable/profiletable';\r\nimport './createptpopup.css';\r\n\r\n// Popup Form component\r\nconst PopupForm = ({ onSubmit, onClose }) => {\r\n  const [profileName, setProfileName] = useState('');\r\n\r\n  const createProfile = async (profileName) => {\r\n    console.log(profileName)\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:5000/api/create-profile', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({profileName})\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        const responseData = await response.json();\r\n        return responseData.success;\r\n    } catch (error) {\r\n        console.error('Error logging in:', error);\r\n        return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(profileName)\r\n    onSubmit(profileName);\r\n    setProfileName(''); // Clear input after submission\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-content\">\r\n        <span className=\"close\" onClick={onClose}></span>\r\n        <h2>Create Profile</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={profileName}\r\n            onChange={(e) => setProfileName(e.target.value)}\r\n            placeholder=\"Enter profile name\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// component\r\nconst PTPopup = () => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [userType, setUserType] = useState('');\r\n  const [profileTables, setProfileTables] = useState([]);\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchUserTypes(); // Fetch user types when component mounts\r\n  }, []); // Run only once on component mount   \r\n\r\n  const openPopup = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const handleSubmit = (name) => {\r\n    setUserType(name);\r\n    setProfileTables([...profileTables, <ProfileTable key={name} userType={name} />]);\r\n    closePopup();\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchInput(e.target.value); // Update searchInput state with the typed value\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render the search bar */}\r\n      <input\r\n        type=\"text\"\r\n        value={searchInput}\r\n        onChange={handleSearchChange}\r\n        placeholder=\"Search profile tables...\"\r\n      />\r\n\r\n      {/* Render the ProfileTables */}\r\n      {profileTables.filter(table => table.props.userType.toLowerCase().includes(searchInput.toLowerCase())).map((table, index) => (\r\n        <div key={index}>{table}</div>\r\n      ))}\r\n\r\n      {/* Render the popup form conditionally */}\r\n      {showPopup && <PopupForm onSubmit={handleSubmit} onClose={closePopup} />}\r\n      \r\n      {/* Button to open the popup form */}\r\n      <button className=\"createProfileTableButton\"onClick={openPopup}>Create Profile Table</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PTPopup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}