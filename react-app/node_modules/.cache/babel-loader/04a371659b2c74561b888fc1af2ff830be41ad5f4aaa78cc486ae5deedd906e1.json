{"ast":null,"code":"var _jsxFileName = \"/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/myfavourites/myfavourites.js\";\nimport { Component } from \"react\";\nimport MFListing from \"./myfavouriteslisting\";\nimport './myfavourites.css';\n//import TestMFListing from \"./@@testmflisting\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass MyFavourites extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favouriteListings: [] // Initially an empty array, will be populated with data\n    };\n    this.fetchFavouriteListings = () => {\n      fetch('http://127.0.0.1:5000/api/favourite-listing').then(response => response.json()).then(listings => {\n        this.setState({\n          favouriteListings: listings || [] // Ensure data is an array or default to empty array\n        });\n      }).catch(error => console.error('Error fetching listings:', error));\n    };\n    // Function to handle radio button change\n    this.handleRadioChange = event => {\n      this.setState({\n        filterStatus: event.target.value\n      }, () => {\n        this.filterListings(); // Filter listings based on the selected status\n      });\n    };\n    // Function to filter listings based on the selected status\n    this.filterListings = () => {\n      const {\n        favouriteListings,\n        filterStatus\n      } = this.state;\n      let filteredListings = favouriteListings;\n      if (filterStatus !== \"All\") {\n        filteredListings = favouriteListings.filter(listing => listing.status === filterStatus);\n      }\n      this.setState({\n        filteredListings\n      });\n    };\n    this.handleViewListing = listingid => {\n      window.location.href = `/viewlistingpage/${listingid}`;\n    };\n    this.state = {\n      username: \"\",\n      favouriteListings: [],\n      // Initially an empty array, will be populated with data\n      filterStatus: \"All\" // Initial filter status, can be \"All\", \"Sold\", or \"Unsold\"\n    };\n  }\n  componentDidMount() {\n    //use this to get array of Favourited Listing's IDs\n    this.setState({\n      username: window.location.href.split('/')[4]\n    });\n    this.fetchFavouriteListings(); // Fetch favourite listings when component mounts\n  }\n  render() {\n    const {\n      favouriteListings,\n      filterStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myfavouritesarea\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bs-filter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"All\",\n              checked: filterStatus === \"All\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), \"All\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Unsold\",\n              checked: filterStatus === \"Unsold\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), \"Unsold\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"bs-filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"Sold\",\n              checked: filterStatus === \"Sold\",\n              onChange: this.handleRadioChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), \"Sold\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listings-container\",\n          children: favouriteListings && favouriteListings.map(listing => /*#__PURE__*/_jsxDEV(MFListing, {\n            listing: listing,\n            onView: () => this.handleViewListing(listing.id)\n          }, listing.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default MyFavourites;","map":{"version":3,"names":["Component","MFListing","jsxDEV","_jsxDEV","Fragment","_Fragment","MyFavourites","constructor","props","state","favouriteListings","fetchFavouriteListings","fetch","then","response","json","listings","setState","catch","error","console","handleRadioChange","event","filterStatus","target","value","filterListings","filteredListings","filter","listing","status","handleViewListing","listingid","window","location","href","username","componentDidMount","split","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","onView","id"],"sources":["/Users/j/Desktop/Csit314-Group-Project/react-app/src/components/myfavourites/myfavourites.js"],"sourcesContent":["import { Component } from \"react\";\nimport MFListing from \"./myfavouriteslisting\";\nimport './myfavourites.css';\n//import TestMFListing from \"./@@testmflisting\";\n\nclass MyFavourites extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            username:\"\",\n            favouriteListings: [], // Initially an empty array, will be populated with data\n            filterStatus: \"All\" // Initial filter status, can be \"All\", \"Sold\", or \"Unsold\"\n        };\n    };\n    \n    \n    state = {\n        favouriteListings: [], // Initially an empty array, will be populated with data\n    };\n\n    componentDidMount() { //use this to get array of Favourited Listing's IDs\n        this.setState({username: window.location.href.split('/')[4]});\n        this.fetchFavouriteListings(); // Fetch favourite listings when component mounts\n    }\n\n    fetchFavouriteListings = () => {\n        fetch('http://127.0.0.1:5000/api/favourite-listing')\n            .then(response => response.json())\n            .then(listings => {\n                this.setState({ \n                    favouriteListings: listings || [] // Ensure data is an array or default to empty array\n                });\n            })\n            .catch(error => console.error('Error fetching listings:', error));\n    }\n\n    // Function to handle radio button change\n    handleRadioChange = (event) => {\n        this.setState({ filterStatus: event.target.value }, () => {\n            this.filterListings(); // Filter listings based on the selected status\n        });\n    };\n\n    // Function to filter listings based on the selected status\n    filterListings = () => {\n        const { favouriteListings, filterStatus } = this.state;\n        let filteredListings = favouriteListings;\n\n        if (filterStatus !== \"All\") {\n            filteredListings = favouriteListings.filter(listing => listing.status === filterStatus);\n        }\n\n        this.setState({ filteredListings });\n    };\n\n    handleViewListing = (listingid) => {\n        window.location.href = `/viewlistingpage/${listingid}`\n    };\n\n    render(){\n        const { favouriteListings , filterStatus } = this.state;\n        return(\n            <>\n            <div className=\"myfavouritesarea\">\n                <h2>My Favourites</h2>\n                <div className=\"bs-filter-container\">\n                    <label className=\"bs-filter-item\">\n                        <input \n                            type=\"radio\" \n                            value=\"All\" \n                            checked={filterStatus === \"All\"} \n                            onChange={this.handleRadioChange} \n                        />\n                        All\n                    </label>\n                    <label className=\"bs-filter-item\">\n                        <input \n                            type=\"radio\" \n                            value=\"Unsold\" \n                            checked={filterStatus === \"Unsold\"} \n                            onChange={this.handleRadioChange} \n                        />\n                        Unsold\n                    </label>\n                    <label className=\"bs-filter-item\">\n                        <input \n                            type=\"radio\" \n                            value=\"Sold\" \n                            checked={filterStatus === \"Sold\"} \n                            onChange={this.handleRadioChange} \n                        />\n                        Sold\n                    </label>\n                </div>\n                <div className=\"listings-container\">\n                {favouriteListings && favouriteListings.map(listing => (\n                    <MFListing key={listing.id} \n                      listing={listing} \n                      onView={() => this.handleViewListing(listing.id)}\n                    />\n                ))}\n                </div>\n            </div>\n            </>\n        )\n    }  \n}\n\nexport default MyFavourites;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}